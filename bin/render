#! /bin/bash

color() {
    echo -n "`tput setaf $1`${@:2}"
    # reset color if there are arguments:
    if [[ "$#" > 1 ]]; then echo -n "`tput sgr0`"; fi
}
red() { color 1 "$@"; }
green() { color 2 "$@"; }
cyan() { color 6 "$@"; }
reset() { color 7 "$@"; echo -n `tput sgr0`; }

aerender=/Applications/Adobe\ After\ Effects\ CC\ 2019/aerender

help() {
    FILENAME=${0##*/}
    echo "
    `green Usage:`
        `cyan $FILENAME` <file> [file...]
    
    `green Options:`
        `cyan file`   After Effects .aep file for After Effects' aerender to render.
    "
}

# no args
if [[ "$#" < 1 ]]; then help; exit 0; fi

# proactively check for errors
for ARG in "$@"; do
    if [[ ! -f "$ARG" ]]; then
        echo "`red Error:` File does not exist: $ARG"
        ERRORS=true
    elif [[ "$ARG" != *.aep ]]; then
        echo "`red Error:` File must be .aep: $ARG"
        ERRORS=true
    else
        FILES+=()
    fi
done

# exit if there were errors
if [[ $ERRORS == true ]]; then exit 1; fi

ERRORS=()
err() {
    ERRORS+=("$1")
    echo `red ✖ Error:` "$1"
}
# render
for ARG in "$@"; do
    if [[ ! -f "$ARG" ]]; then
        err "File does not exist: $ARG"
    elif [[ "$ARG" != *.aep ]]; then
        err "File must be .aep: $ARG"
    else
        echo ""
        FILE="$(cd "$(dirname "$ARG")" && pwd)/$(basename "$ARG")" # get absolute path
        command "$aerender" -project "$FILE" || err "Render failed: $ARG"
    fi
done

# recap errors
# if more than one render
if [[ "$#" > 1 && ${#FILES[@]} ]]; then
    # if errors
    if [[ ${#FILES[@]} == 0 ]]; then
        printf "\n\n\n"
        echo "`tput bold``red`Errors occured while rendering:`reset`"
        for ERROR in "$ERRORS"; do
            echo "    `red ✖ Error:` $ERROR"
        done
        printf "\n\n\n"
    fi
fi
